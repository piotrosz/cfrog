@using CookingFrog.WebUI.Components.Models

@if (_isEdit)
{
    <div class="container">
        <div class="row">
            <div class="col col-5">
                <InputText 
                    @bind-value="_updatedIngredient.Name" 
                    class="form-control form-control-sm" />
            </div>
            <div class="col col-1">
                <QuantityEdit 
                    Quantity="_updatedIngredient.Quantity" 
                    UpdateClicked="UpdateQuantity" />
            </div>
            <div class="col col=1">
                <UnitEdit 
                    Unit="_updatedIngredient.Unit" 
                    UpdateClicked="UpdateUnit" />
            </div>
            <div class="col col-1">
                <InputText
                    @bind-value="_updatedIngredient.GroupName"
                    class="form-control form-control-sm" />
            </div>
            <div class="col col-4">
                <div class="input-group mb-3">
                    <button
                        type="button"
                        class="btn btn-sm"
                        @onclick="@(async () =>
                                  {
                                      await UpdateClicked.InvokeAsync(_updatedIngredient);
                                      _isEdit = false;
                                  })">
                        ‚úÖ
                    </button>
                    <button
                        type="button"
                        class="btn btn-sm"
                        @onclick="@(() => { _isEdit = false; })">
                        ‚ùå
                    </button>
                </div>      
            </div>
        </div>
    </div>
}
else
{
    <div class="input-group mb-3">
        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="" id="@Ingredient?.Name">
            <label class="form-check-label" for="@Ingredient?.Name">
                <IngredientDisplay
                    Ingredient="@Ingredient"/>
            </label>
        </div>
        <button type="button"
                class="btn btn-sm"
                @onclick="Edit">
            üñäÔ∏è
        </button>
    </div>
}

@code {
    [Parameter] 
    public Ingredient? Ingredient { get; set; }
    
    [Parameter]
    public int Index { get; set; }
    
    [Parameter] 
    public EventCallback<IngredientUpdateModel> UpdateClicked { get; set; }
    
    private IngredientUpdateModel _updatedIngredient = new(-1,string.Empty, 0, UnitEnum.Undefined, string.Empty);

    protected override void OnInitialized()
    {
        if (Ingredient != null && Index >= 0)
        {
            var quantity = Ingredient.Quantity; 
            _updatedIngredient = new IngredientUpdateModel(
                Index,
                Ingredient.Name,
                quantity.Value,
                quantity.Unit,
                Ingredient.GroupName);
        }
    }

    private void UpdateQuantity(decimal quantity)
    {
        _updatedIngredient.Quantity = quantity;
    }
    
    private void UpdateUnit(UnitEnum unit)
    {
        _updatedIngredient.Unit = unit;
    }
    
    private bool _isEdit;

    private void Edit()
    {
        _isEdit = true;
    }
}