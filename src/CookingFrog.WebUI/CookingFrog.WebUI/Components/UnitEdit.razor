<InputSelect 
    @bind-Value="_selectedValue" 
    class="form-select form-select-sm" 
    @onchange="@(async () =>
    {
        await UpdateClicked.InvokeAsync(_selectedValue);
    })">
    @foreach (var option in _unitOptions)
    {
        <option value="@option.Value">@option.Description</option>
    }
</InputSelect>

@code {
    [Parameter]
    public UnitEnum Unit { get; set; }

    private UnitEnum _selectedValue;
    
    [Parameter] 
    public EventCallback<UnitEnum> UpdateClicked { get; set; }
    
    private IReadOnlyList<UnitOption> _unitOptions = new List<UnitOption>();

    protected override void OnInitialized()
    {
        _selectedValue = Unit;
        FillUnitOptions();
    }

    private void FillUnitOptions()
    {
        var allUnits = Enum.GetValues<UnitEnum>();

        _unitOptions = allUnits
            .Select(x => new UnitOption
            {
                Value = (int)x,
                Description = x.GetDisplayDescription()
            })
            .ToList();
    }

    private class UnitOption
    {
        public int Value { get; set; }

        public string Description { get; set; } = string.Empty;
    }
}